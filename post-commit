#!/bin/bash

# This hook is intended to automatically propagate changes from the master
# branch to all topic branches that are present.

# First check if we're on the master branch, and if not, exit cleanly
if [ -z "$(git branch | fgrep '* master')" ]; then
    exit 0
fi

# Get SHA-1 of last commit
id=$(git log -1 | head -1 | cut -d' ' -f2)

# Get list of files changed in last commit
files=$(git diff-tree --no-commit-id --name-only -r $id)

# Fetch commit message, remove leading whitespace
msg=$(git log -1 | tail -1 | sed 's/^[ \t]*//')

# Find all topic branches
branches=$(git branch | fgrep -v 'master')

# Loop through topic branches, pull in all changed files from master
# branch and commit them with a similar message
for branch in $branches; do
    git checkout $branch
    for file in $files; do
        git checkout master $file
    done
    git commit -m "$msg (auto-commit change to master branch)"
done

# Full circle
git checkout master
